Parameters:
  Region:
    Type: String
    Description: Please enter the region in which the lambda will be executed
  s3Bucket:
    Type: String
    Description: Enter the name of the s3 bucket where you upload the Lambda Layer and package
  ApiKey:
    Type: String
    Description: Please enter your Deep Security API Key
  EmailSender:
    Type: String
    Description: Email id to be used for sending report
  EmailRecipients:
    Type: String
    Description: Comma separated email ids for recieving report
  CronSchedule:
    Type: String
    Description: Enter the when you would like the lambda function to run in the cron format
Resources:
  LambdaLayer1:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - python3.9
      Content:
        S3Bucket: !Ref s3Bucket
        S3Key: "python.zip"
      LayerName: "DSlayer"

  LambdaRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com" 
            Action: 
              - "sts:AssumeRole"  
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonVPCCrossAccountNetworkInterfaceOperations
          # - !Ref ManagedPolicyforlambda 
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AmazonInspector2ReadOnlyAccess
          - arn:aws:iam::aws:policy/AmazonSESFullAccess

  LambdaLayerParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: lambda_layer_for_vulnerability
      Type: String
      Value: "NA"

  LambdaFunction:
    Type: "AWS::Lambda::Function"
    DependsOn:
      - "LambdaLayerParameter"
    Properties:
      Environment:
        Variables:
          region: !Ref Region
          apikey: !Ref ApiKey
          sender: !Ref EmailSender
          recipients: !Ref EmailRecipients
      Code:
        S3Bucket: !Ref s3Bucket
        S3Key: "vulnerability_report_lambda.py.zip"
      FunctionName: "vulnerability_report_lambda"
      Handler: "vulnerability_report_lambda.lambda_handler"
      Layers:
        - !Ref LambdaLayer1
      Runtime: python3.9
      Timeout: 120
      Role: !GetAtt LambdaRole.Arn

  ScheduledRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "ScheduledRule"
      ScheduleExpression: !Sub ${CronSchedule} 
      State: "ENABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "LambdaFunction"
              - "Arn"
          Id: "TargetFunctionV1"
  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref "LambdaFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "ScheduledRule"
          - "Arn"
 